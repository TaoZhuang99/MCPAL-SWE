clear;
%% data loading

% PAL_data: 2D coupled audio sound generated by two elements with 10 mm
% interval
% PAL_data_2: 2D coupled audio sound generated by two elements with 20 mm
% interval

PAL_data = load("data\CoupledAudioSound_2PAL_500Hz.mat");
audio_freq = 500;

%% Paraments setting

% 2D field point setting
fp.x = linspace(-0.5, 0.5, 100).';
fp.z = linspace(0, 2, 100);

% PAL array elements setting
elem.num = 10;
elem.gap = 0.01;
elem.posi = ((1-elem.num):2:(elem.num-1))*(elem.gap/2);
elem.x_max = elem.posi(end);
steer_angle = 20/180*pi; % steering angle

% ultrasound frequency
ultra_freq = 40e3;
f_1 = ultra_freq + audio_freq/2;
f_2 = ultra_freq - audio_freq/2;

k_u = 2*pi*ultra_freq/343 + 1i*AbsorpAttenCoef(ultra_freq);
k_1 = 2*pi*f_1/343 + 1i*AbsorpAttenCoef(f_1);
k_2 = 2*pi*f_2/343 + 1i*AbsorpAttenCoef(f_2);

steer_coeff1 = exp(1i*real(k_1)*sin(steer_angle)*elem.posi);
steer_coeff2 = exp(-1i*real(k_2)*sin(steer_angle)*elem.posi);

u0 = 0.1;

%% Audio sound field by single PAL

fp_inter.z = [flipud(PAL_data.fp.z(2:end,:)); PAL_data.fp.z];
fp_inter.x = [flipud(PAL_data.fp.x(2:end,:,2)); PAL_data.fp.x(:,:,1)];

prs_inter = [flipud(PAL_data.prs(2:end,:,2)); PAL_data.prs(:,:,1)];
F_single = scatteredInterpolant(fp_inter.x(:), fp_inter.z(:), prs_inter(:), 'natural');

prs_single = 0 * fp.x .* fp.z;

for i = 1:elem.num

    sc1 = steer_coeff1(i);
    sc2 = steer_coeff2(i);
    
    prs_single = prs_single + sc1*sc2 * ...
        F_single({fp.x-elem.posi(i), fp.z});

end

%% Coupled audio sound of 1-th correction

prs_inter = [flipud(PAL_data.prs_Addition1(2:end,:,2)); PAL_data.prs_Addition1(:,:,1)];
F_couple = scatteredInterpolant(fp_inter.x(:), fp_inter.z(:), prs_inter(:), 'natural');

prs_couple = 0 * fp.x .* fp.z;

for i = 1:(elem.num-1)

    sc11 = steer_coeff1(i);
    sc22 = steer_coeff2(i+1);
    sc12 = steer_coeff2(i);
    sc21 = steer_coeff1(i+1);

    prs_couple = prs_couple + ...
        sc11*sc22 * F_couple({fp.x-(elem.posi(i)+elem.gap/2), fp.z}) + ...
        sc12*sc21 * F_couple({-fp.x+(elem.posi(i)+elem.gap/2), fp.z});
end

%% Coupled audio sound of 2-th correction

prs_inter2 = [flipud(PAL_data.prs_Addition2(2:end,:,2)); PAL_data.prs_Addition2(:,:,1)];
F_couple2 = scatteredInterpolant(fp_inter.x(:), fp_inter.z(:), prs_inter2(:), 'natural');

prs_couple2 = 0 * fp.x .* fp.z;

for i = 1:(elem.num-2)

    sc11 = steer_coeff1(i);
    sc22 = steer_coeff2(i+2);
    sc12 = steer_coeff2(i);
    sc21 = steer_coeff1(i+2);
    
    prs_couple2 = prs_couple2 + ...
        sc11*sc22 * F_couple2({fp.x-(elem.posi(i)+elem.gap/2), fp.z}) + ...
        sc12*sc21 * F_couple2({-fp.x+(elem.posi(i)+elem.gap/2), fp.z});
end

%% 2D figure

spl_tot = prs2spl(prs_single + prs_couple + prs_couple2);
spl_single = prs2spl(prs_single);

fig = Figure;
pcolor(fp.z, fp.x, spl_tot);
fig.Init;

% caxis([caxis_inf caxis_sup])
% caxis([10 50])
ylim([-0.5,0.5]);
xlim([0,2]);
ylabel('x (m)');
xlabel('z (m)');
